<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core.dll" #>
<#@ assembly name="System.Data.dll" #>
<#@ assembly name="System.Data.DataSetExtensions.dll" #>
<#@ assembly name="System.Xml.dll" #>
<#@ assembly name="System.Xml.Linq.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.Xml.Linq"#>
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ include file="$(ProjectDir)DbHelper.ttinclude"  #>
<#@ include file="$(ProjectDir)ModelAuto.ttinclude"#>
<#@ include file="$(ProjectDir)XmlNode.ttinclude"#>
<#@ include file="$(ProjectDir)config.ttinclude"#>

//------------------------------------------------------------------------------
// <T4模板生成实体类/>
//     此代码由T4模板自动生成
//	   生成时间 <#=DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")#>
//     对此文件的更改可能会导致不正确的行为，并且如果重新生成代码，这些更改将会丢失。
// <T4模板生成实体类/>
//------------------------------------------------------------------------------
<# 
	var ModePath=config.FullPath+"\\"+config.ModelName;//模型保存路径
	Manager manager2 = new Manager(Host, GenerationEnvironment, true) { OutputPath =Path.GetDirectoryName(Host.TemplateFile) };//保存Input
	Manager OutPutManage = new Manager(Host, GenerationEnvironment, true) { OutputPath =Path.GetDirectoryName(Host.TemplateFile) };//保存Output
	Manager PagingManage = new Manager(Host, GenerationEnvironment, true) { OutputPath =Path.GetDirectoryName(Host.TemplateFile) };//保存Paging
	XmlNode Xml_Node=new XmlNode(config.XmlPath); //读取Xml
	Xml_Node.CreateFile(config.ModelName,config.FullPath);//创建存放模型文件夹
	List<DbTable> dataList=new List<DbTable>();
	if(string.IsNullOrWhiteSpace(config.TableName))
	{
		dataList=DbHelper.GetDbTables(config.ConnectionString, config.DbDatabase);
	}
	else
	{
		dataList=DbHelper.GetDbTables(config.ConnectionString, config.DbDatabase,config.TableName);
	}
 #>

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Text;
namespace NFine.Domain.Entity.SystemManage
{ 
    <# foreach(DbTable item in dataList){#>
       
        <#
          var TableName=item.TableName.Substring(item.TableName.LastIndexOf("_")+1);
          Xml_Node.CreateFile(TableName,ModePath);//创建模型文件夹
          Xml_Node.CreateFile("Input",ModePath+"\\"+TableName);//创建Input文件夹
          manager2.StartBlock(ModePath+"\\"+TableName+"\\Input\\"+TableName.Trim()+"Input.cs");//创建Input.cs文件
          DbColumn filedCol=new DbColumn();
        #>

       using System;
       using System.Collections.Generic;
       using System.ComponentModel.DataAnnotations;
       using System.Linq;
       using System.Text;
       namespace GreenUnity.WebApi.Areas.Models.<#=TableName#>.Input
       {
          public class <#=TableName#>Input
          {
              <# foreach(DbColumn column in DbHelper.GetDbColumns(config.ConnectionString, config.DbDatabase, item.TableName)){#>
                 <#if(column.IsPrimaryKey){#>
                     <#filedCol=column;#>
                     <#continue;#>
                 <#}#>
                   <# 
                     var ColName=column.ColumnName;
                     var Node= Xml_Node.Find("member","name",item.TableName+"."+ColName);
                     var NodeName="";
                   #>
                   <#if(Node!=null){#><#  NodeName=Node.Value.Trim();#><#}#>
                   /// <summary>
                   /// <#=NodeName#>
                   /// </summary>
                 <#if(!column.IsNullable){#>[Required(ErrorMessage="<#=NodeName#>不能为空")]<#}#>
                 <#if("string"==column.CSharpType){#> <#= "\r\n"#> [StringLength(<#=column.CharLength#>,ErrorMessage="<#=NodeName#>不能超过<#= column.CharLength#>个字符！")]<#}#> 
                   public <#= column.CSharpType#><# if(column.CommonType.IsValueType && column.IsNullable){#>?<#}#> <#=column.ColumnName#> { get; set; }
      
              <#}#>
           }
           public class <#=TableName#>EditInput:<#=TableName#>Input
           {
              public <#= filedCol.CSharpType#><# if(filedCol.CommonType.IsValueType && filedCol.IsNullable){#>?<#}#> <#=filedCol.ColumnName#> { get; set; }
           }
        }
       <# manager2.EndBlock(); #>
   <#}#>
   <# manager2.Process(true); #>

  //OutPut
  <# foreach(DbTable item in dataList){#>
       <# 
         var TableName=item.TableName.Substring(item.TableName.LastIndexOf("_")+1);
         Xml_Node.CreateFile(TableName,ModePath);//创建模型名文件夹（存在没任何操作）
         Xml_Node.CreateFile("OutPut",ModePath+"\\"+TableName);//创建Output文件夹
         OutPutManage.StartBlock(ModePath+"\\"+TableName+"\\OutPut\\"+TableName+"Output.cs");
       #>
       using System;
       using System.Collections.Generic;
       using System.ComponentModel.DataAnnotations;
       using System.Linq;
       using System.Text;
       namespace GreenUnity.WebApi.Areas.Models.<#=TableName#>.Input
       {
           public class <#=TableName#>Output
           {
               <# foreach(DbColumn column in DbHelper.GetDbColumns(config.ConnectionString, config.DbDatabase, item.TableName)){#>
                    <# 
                       var ColName=column.ColumnName;
                       var Node= Xml_Node.Find("member","name",item.TableName+"."+ColName); 
                       var NodeName="";
                    #>
                    <#if(Node!=null){#><#  NodeName=Node.Value.Trim();#><#}#>
                    /// <summary>
                    /// <#=NodeName#>
                    /// </summary>
                  <#if(!column.IsNullable){#>[Required(ErrorMessage="<#=NodeName#>不能为空")]<#}#>
                  <#if("string"==column.CSharpType){#> <#= "\r\n"#> [StringLength(<#=column.CharLength#>,ErrorMessage="<#=NodeName#>不能超过<#= column.CharLength#>个字符！")]<#}#> 
                    public <#= column.CSharpType#><# if(column.CommonType.IsValueType && column.IsNullable){#>?<#}#> <#=column.ColumnName#> { get; set; }
               <#}#>
            }
       }
     <# OutPutManage.EndBlock(); #>
   <#}#>
  <# OutPutManage.Process(true); #>
  
  //分页
  <#foreach(DbTable item in dataList){#>
      <#
         var TableName=item.TableName.Substring(item.TableName.LastIndexOf("_")+1);
         PagingManage.StartBlock(ModePath+"\\"+TableName+"\\Input\\"+TableName+"PagingInput.cs");
      #>
     using GreenUnity.Common;
     using GreenUnity.EntityFramework.Entities;
     using System;
     using System.Collections.Generic;
     using System.Linq;
     using System.Threading.Tasks;
     
     namespace GreenUnity.WebApi.Areas.<#= TableName#>.Models.<#= TableName#>.Input
     {
         public class <#= TableName#>PagingInput: PagingBaseInput
         {
             /// <summary>
             /// 关键字
             /// </summary>
             public string Keyword { get; set; }
         }
     }

  <#}#>
  <#
     PagingManage.EndBlock();
     PagingManage.Process(true);
  #>
}



